name: Terraform Deployment with Conditional Rollback

on:
  push:
    branches:
      - master

env:
  TF_WORKING_DIR: ./ec2  # Path to your Terraform configuration files

jobs:
  terraform:
    name: Terraform Deployment with Conditional Rollback
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.0

      - name: Initialize Terraform
        run: terraform init -backend-config="key=${{ github.sha }}.tfstate"
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=${{ env.TF_WORKING_DIR }}/tfplan
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve ${{ env.TF_WORKING_DIR }}/tfplan
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Check Apply Success
        if: ${{ failure() }}
        run: |
          echo "Terraform Apply failed. Initiating rollback process."

      - name: Rollback to Previous State
        if: ${{ failure() }}
        run: |
          echo "Starting Terraform Destroy to rollback..."
          terraform destroy -auto-approve
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Notify Rollback
        if: ${{ failure() }}
        run: echo "Rollback completed successfully."

      - name: Notify Success
        if: ${{ success() }}
        run: echo "Terraform Apply completed successfully!"
